{"version":3,"file":"static/js/305.3a1472c3.chunk.js","mappings":"mLAAaA,EAAQ,WACnB,OAAO,gDACR,C,+FCoFD,UAhFyB,WACvB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAI,WAAYH,GACxB,OAAkCI,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,YAERC,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GACJV,QAAQC,IAAI,WAAYS,GACxBN,EAAaM,GACbJ,GAAY,EACb,IACAK,OAAM,SAAAC,GACLZ,QAAQC,IAAIW,GACZN,GAAY,EAEb,GACJ,GAAE,CAACR,IAEJE,QAAQC,IAAI,cAAeE,GAC3B,IAAMU,EACJV,GAAaA,EAAUU,OACnBV,EAAUU,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAC1B,GACN,OAAIX,GAAiB,SAAC,IAAD,KAGnB,6BACE,iBAAKY,UAAU,SAAf,WACE,gBAAKA,UAAU,gBAAf,SACGd,IACC,gBACEc,UAAU,iCACVC,IAAG,yCAAoCf,EAAUgB,eACjDC,IAAI,QAIV,iBAAKH,UAAU,gBAAf,UACGd,IACC,gBAAIc,UAAU,WAAd,UACGd,EAAUkB,MADb,KACoB,gCAAQlB,EAAUmB,aAAlB,WAGtB,eAAIL,UAAU,MAAd,sBACCd,IACC,cAAGc,UAAU,mBAAb,SAAiCd,EAAUoB,YAE7C,eAAIN,UAAU,MAAd,qBACA,cAAGA,UAAU,cAAb,SAA4BJ,EAAOW,KAAK,eAI5C,gBAAKP,UAAU,2CAAf,UACE,gBAAIA,UAAU,kCAAd,WACE,eAAIA,UAAU,WAAd,UACE,SAAC,KAAD,CACEA,UAAU,oGACVQ,GAAG,OAFL,qBAOF,eAAIR,UAAU,WAAd,UACE,SAAC,KAAD,CACEA,UAAU,iHACVQ,GAAG,UAFL,6BASN,SAAC,KAAD,MAGL,C,uJCrFM,IAAMC,EAAU,mCACVC,EAAQ,gCCCRnB,EAAoB,SAAAV,GAC/B,OAAO8B,MAAM,GAAD,OAAID,EAAJ,iBAAqB7B,EAArB,oBAAwC4B,IAAWjB,MAAK,SAAAC,GAAG,OACrEA,EAAImB,MADiE,GAGxE,EAEYC,EAAqB,WAChC,OAAOF,MAAM,GAAD,OAAID,EAAJ,sCAA0CD,IAAWjB,MAAK,SAAAC,GAAG,OACvEA,EAAImB,MADmE,GAG1E,EAEYE,EAAoB,SAAAjC,GAC/B,OAAO8B,MAAM,GAAD,OAAID,EAAJ,iBAAqB7B,EAArB,4BAAgD4B,IAAWjB,MACrE,SAAAC,GAAG,OAAIA,EAAImB,MAAR,GAEN,EACYG,EAAoB,SAAAlC,GAC/B,OAAO8B,MAAM,GAAD,OAAID,EAAJ,kBAAsB7B,EAAtB,4BAAiD4B,IAAWjB,MACtE,SAAAC,GAAG,OAAIA,EAAImB,MAAR,GAEN,EAEYI,EAAmB,SAAAC,GAC9B,OAAON,MAAM,GAAD,OACPD,EADO,gCACyBD,EADzB,kBAC0CQ,IACpDzB,MAAK,SAAAC,GAAG,OAAIA,EAAImB,MAAR,GACX,C","sources":["components/Error.js","pages/MovieDetailsPage.js","services/api.js","services/request.js"],"sourcesContent":["export const Error = () => {\n  return <h1>Error loading movies</h1>;\n};\n","import { Error } from 'components/Error';\n//import { Loading } from 'components/Loading';\nimport { fetchMovieDetails } from 'services/request';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useParams, Outlet } from 'react-router-dom';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  console.log('Movie id', movieId);\n  const [movieData, setMovieData] = useState(null);\n  // const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    // setIsLoading(true);\n    fetchMovieDetails(movieId)\n      .then(res => {\n        console.log('raspuns:', res);\n        setMovieData(res);\n        setHasError(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setHasError(true);\n        // setIsLoading(false);\n      });\n  }, [movieId]);\n\n  console.log('Movie data:', movieData);\n  const genres =\n    movieData && movieData.genres\n      ? movieData.genres.map(genre => genre.name)\n      : [];\n  if (hasError) return <Error />;\n\n  return (\n    <main>\n      <div className=\"d-flex\">\n        <div className=\"p-2 flex-fill\">\n          {movieData && (\n            <img\n              className=\"object-fit-fill border rounded\"\n              src={`https://image.tmdb.org/t/p/w500${movieData.backdrop_path}`}\n              alt=\"\"\n            />\n          )}\n        </div>\n        <div className=\"p-2 flex-fill\">\n          {movieData && (\n            <h2 className=\"fs-2 p-2\">\n              {movieData.title} <span>({movieData.release_date})</span>\n            </h2>\n          )}\n          <h4 className=\"p-2\">Overview</h4>\n          {movieData && (\n            <p className=\"mb-auto p-2 w-75\">{movieData.overview}</p>\n          )}\n          <h4 className=\"p-2\">Genres</h4>\n          <p className=\"mb-auto p-2\">{genres.join(', ')}</p>\n        </div>\n      </div>\n\n      <div className=\"bg-body-tertiary navbar-expand-lg navbar\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link link-color link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover fs-4\"\n              to=\"cast\"\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink\n              className=\"nav-link link-color link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover fs-4\"\n              to=\"reviews\"\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </main>\n  );\n};\nexport default MovieDetailsPage;\n","export const API_KEY = '0507af1e31361aabd0924a524e62c663';\nexport const BASE_URL = `https://api.themoviedb.org/3/`;\n","import { BASE_URL, API_KEY } from './api';\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovieTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n};\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n};\n\nexport const fetchMovieSearch = searchQuery => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  ).then(res => res.json());\n};\n"],"names":["Error","movieId","useParams","console","log","useState","movieData","setMovieData","hasError","setHasError","useEffect","fetchMovieDetails","then","res","catch","error","genres","map","genre","name","className","src","backdrop_path","alt","title","release_date","overview","join","to","API_KEY","BASE_URL","fetch","json","fetchMovieTrending","fetchMovieCredits","fetchMovieReviews","fetchMovieSearch","searchQuery"],"sourceRoot":""}