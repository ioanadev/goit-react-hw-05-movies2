{"version":3,"file":"static/js/357.8f86ca1c.chunk.js","mappings":"mLAAaA,EAAQ,WACnB,OAAO,gDACR,C,gGCuDD,UAnDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAoBA,OAnBAC,QAAQC,IAAI,WAAYV,IAExBW,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,IAAkBZ,GACfa,MAAK,SAAAC,GACJL,QAAQC,IAAI,gBAAiBI,GAC7BV,EAAWU,EAAIC,SACfP,GAAY,EACb,IACAQ,OAAM,SAAAC,GACLR,QAAQC,IAAIO,GACZT,GAAY,GACZF,GAAa,EACd,IACAY,SAAQ,WACPZ,GAAa,EACd,GACJ,GAAE,CAACN,IACmB,IAAnBG,EAAQgB,QACH,kEAETV,QAAQC,IAAI,WAAYP,IAEtB,gCACGE,IAAa,SAAC,IAAD,IACbE,IAAY,SAAC,IAAD,KACb,0BACE,wCAEF,0BACGJ,EAAQiB,KAAI,SAAAC,GAAM,OACjB,gBACEC,UAAU,+CADZ,WAIE,gBAAIA,UAAU,MAAd,qBAA6BD,EAAOE,WACpC,qCAAaF,EAAOG,aAHfH,EAAOI,GAHG,KASnB,mBACA,wBAIP,C,uJCxDM,IAAMC,EAAU,mCACVC,EAAQ,gCCCRC,EAAoB,SAAA5B,GAC/B,OAAO6B,MAAM,GAAD,OAAIF,EAAJ,iBAAqB3B,EAArB,oBAAwC0B,IAAWb,MAAK,SAAAC,GAAG,OACrEA,EAAIgB,MADiE,GAGxE,EAEYC,EAAqB,WAChC,OAAOF,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAWb,MAAK,SAAAC,GAAG,OACvEA,EAAIgB,MADmE,GAG1E,EAEYE,EAAoB,SAAAhC,GAC/B,OAAO6B,MAAM,GAAD,OAAIF,EAAJ,iBAAqB3B,EAArB,4BAAgD0B,IAAWb,MACrE,SAAAC,GAAG,OAAIA,EAAIgB,MAAR,GAEN,EACYlB,EAAoB,SAAAZ,GAC/B,OAAO6B,MAAM,GAAD,OAAIF,EAAJ,kBAAsB3B,EAAtB,4BAAiD0B,IAAWb,MACtE,SAAAC,GAAG,OAAIA,EAAIgB,MAAR,GAEN,EAEYG,EAAmB,SAAAC,GAC9B,OAAOL,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC0CQ,IACpDrB,MAAK,SAAAC,GAAG,OAAIA,EAAIgB,MAAR,GACX,C","sources":["components/Error.js","components/Reviews.js","services/api.js","services/request.js"],"sourcesContent":["export const Error = () => {\n  return <h1>Error loading movies</h1>;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/request';\nimport { Error } from './Error';\nimport { Loading } from './Loading';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  console.log('Movie id', movieId);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieReviews(movieId)\n      .then(res => {\n        console.log('raspuns cast:', res);\n        setReviews(res.results);\n        setHasError(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setHasError(true);\n        setIsLoading(false);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return <h5>No reviews available for this movie.</h5>;\n  }\n  console.log('Reviews:', reviews);\n  return (\n    <>\n      {isLoading && <Loading />}\n      {hasError && <Error />}\n      <div>\n        <h1>Reviews:</h1>\n      </div>\n      <ul>\n        {reviews.map(review => (\n          <li\n            className=\" shadow-sm p-3 mb-5 bg-body-tertiary rounded\"\n            key={review.id}\n          >\n            <h5 className=\"p-2\">Author: {review.author}</h5>\n            <p>Content: {review.content}</p>\n          </li>\n        ))}\n        <br />\n        <br />\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n","export const API_KEY = '0507af1e31361aabd0924a524e62c663';\nexport const BASE_URL = `https://api.themoviedb.org/3/`;\n","import { BASE_URL, API_KEY } from './api';\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovieTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n};\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n};\n\nexport const fetchMovieSearch = searchQuery => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  ).then(res => res.json());\n};\n"],"names":["Error","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","hasError","setHasError","console","log","useEffect","fetchMovieReviews","then","res","results","catch","error","finally","length","map","review","className","author","content","id","API_KEY","BASE_URL","fetchMovieDetails","fetch","json","fetchMovieTrending","fetchMovieCredits","fetchMovieSearch","searchQuery"],"sourceRoot":""}