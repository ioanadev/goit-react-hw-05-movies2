{"version":3,"file":"static/js/442.bd370711.chunk.js","mappings":"mLAAaA,EAAQ,WACnB,OAAO,gDACR,C,0ECAYC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,8BACGA,EAAOC,OAAS,GACfD,EAAOE,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GAIlB,KAGR,C,4HC0CD,EAnDmB,WACjB,OAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeU,EAAf,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACHL,IAGLM,EAAAA,EAAAA,IAAiBN,GACdO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAKG,SACjBT,EAAUM,EAAKG,SACfP,GAAY,EACb,IACAQ,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,GACZT,GAAY,EACb,GACJ,GAAE,CAACJ,IAOJ,OACE,6BACE,gBAAKc,UAAU,YAAf,UACE,kBAAMA,UAAU,OAAOC,SARF,SAAAC,GACzBA,EAAMC,iBACNhB,EAAee,EAAME,OAAOC,OAC5BV,QAAQW,IAAIpB,EACb,EAIK,WACE,mBAAQqB,KAAK,SAASP,UAAU,gBAAhC,UACE,iBAAMA,UAAU,sBAAhB,uBAGF,kBACEA,UAAU,QACVO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZL,MAAOnB,EACPyB,SAAU,SAAAT,GAAK,OAAIf,EAAee,EAAME,OAAOC,MAAhC,SAKpBhB,IAAY,SAACb,EAAA,EAAD,KACb,wBAAqB,IAAhBU,IAAqB,SAACT,EAAA,EAAD,CAAWC,OAAQA,QAGlD,C,uJCxDM,IAAMkC,EAAU,mCACVC,EAAQ,gCCCRC,EAAoB,SAAAC,GAC/B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,iBAAqBE,EAArB,oBAAwCH,IAAWnB,MAAK,SAAAwB,GAAG,OACrEA,EAAIC,MADiE,GAGxE,EAEYC,EAAqB,WAChC,OAAOH,MAAM,GAAD,OAAIH,EAAJ,sCAA0CD,IAAWnB,MAAK,SAAAwB,GAAG,OACvEA,EAAIC,MADmE,GAG1E,EAEYE,EAAoB,SAAAL,GAC/B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,iBAAqBE,EAArB,4BAAgDH,IAAWnB,MACrE,SAAAwB,GAAG,OAAIA,EAAIC,MAAR,GAEN,EACYG,EAAoB,SAAAN,GAC/B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBE,EAAtB,4BAAiDH,IAAWnB,MACtE,SAAAwB,GAAG,OAAIA,EAAIC,MAAR,GAEN,EAEY1B,EAAmB,SAAAN,GAC9B,OAAO8B,MAAM,GAAD,OACPH,EADO,gCACyBD,EADzB,kBAC0C1B,IACpDO,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,MAAR,GACX,C","sources":["components/Error.js","components/MovieList.js","pages/MoviesPages.js","services/api.js","services/request.js"],"sourcesContent":["export const Error = () => {\n  return <h1>Error loading movies</h1>;\n};\n","import { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <>\n      {movies.length > 0 &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          );\n        })}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMovieSearch } from 'services/request';\nimport { Error } from 'components/Error';\nimport { MovieList } from 'components/MovieList';\nimport './MoviesPage.css';\n\nconst MoviesPage = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetchMovieSearch(searchQuery)\n      .then(resp => {\n        console.log(resp.results);\n        setMovies(resp.results);\n        setHasError(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setHasError(true);\n      });\n  }, [searchQuery]);\n\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    setSearchQuery(event.target.value);\n    console.loc(searchQuery);\n  };\n  return (\n    <main>\n      <div className=\"searchbar\">\n        <form className=\"form\" onSubmit={handleSearchSubmit}>\n          <button type=\"submit\" className=\"search-button\">\n            <span className=\"search-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={searchQuery}\n            onChange={event => setSearchQuery(event.target.value)}\n          />\n        </form>\n      </div>\n\n      {hasError && <Error />}\n      <ul>{searchQuery !== 0 && <MovieList movies={movies} />}</ul>\n    </main>\n  );\n};\nexport default MoviesPage;\n","export const API_KEY = '0507af1e31361aabd0924a524e62c663';\nexport const BASE_URL = `https://api.themoviedb.org/3/`;\n","import { BASE_URL, API_KEY } from './api';\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovieTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n};\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n};\n\nexport const fetchMovieSearch = searchQuery => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  ).then(res => res.json());\n};\n"],"names":["Error","MovieList","movies","length","map","movie","to","id","title","useState","searchQuery","setSearchQuery","setMovies","hasError","setHasError","useEffect","fetchMovieSearch","then","resp","console","log","results","catch","error","className","onSubmit","event","preventDefault","target","value","loc","type","autoComplete","autoFocus","placeholder","onChange","API_KEY","BASE_URL","fetchMovieDetails","movieId","fetch","res","json","fetchMovieTrending","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}